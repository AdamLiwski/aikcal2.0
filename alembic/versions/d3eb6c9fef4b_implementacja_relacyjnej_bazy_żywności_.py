"""Implementacja relacyjnej bazy żywności i funkcji premium

Revision ID: d3eb6c9fef4b
Revises: 
Create Date: 2025-07-24 18:15:08.852840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd3eb6c9fef4b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cached_dishes',
    sa.Column('query', sa.String(), nullable=False),
    sa.Column('composition', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('query')
    )
    with op.batch_alter_table('cached_dishes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cached_dishes_query'), ['query'], unique=False)

    op.create_table('cached_products',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('nutrients', sa.JSON(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    with op.batch_alter_table('cached_products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cached_products_name'), ['name'], unique=False)

    op.create_table('challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('duration_days', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_challenges_id'), ['id'], unique=False)

    op.create_table('dishes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('aliases', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('dishes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dishes_name'), ['name'], unique=True)

    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('aliases', sa.JSON(), nullable=True),
    sa.Column('nutrients', sa.JSON(), nullable=False),
    sa.Column('state', sa.Enum('SOLID', 'LIQUID', name='productstate'), nullable=True),
    sa.Column('average_weight_g', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=True)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('password_reset_token', sa.String(), nullable=True),
    sa.Column('password_reset_expires', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('weekly_goal_kg', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.Enum('BMR', 'SEDENTARY', 'LIGHT', 'MODERATE', 'ACTIVE', 'VERY_ACTIVE', name='activitylevel'), nullable=True),
    sa.Column('diet_style', sa.Enum('BALANCED', 'KETO', 'VEGE', 'LOW_CARB', 'HIGH_PROTEIN', name='dietstyle'), nullable=True),
    sa.Column('calorie_goal', sa.Integer(), nullable=True),
    sa.Column('protein_goal', sa.Integer(), nullable=True),
    sa.Column('fat_goal', sa.Integer(), nullable=True),
    sa.Column('carb_goal', sa.Integer(), nullable=True),
    sa.Column('water_goal', sa.Integer(), nullable=True),
    sa.Column('add_workout_calories_to_goal', sa.Boolean(), nullable=True),
    sa.Column('is_social_profile_active', sa.Boolean(), nullable=True),
    sa.Column('diet_plan_requests', sa.Integer(), nullable=True),
    sa.Column('last_request_date', sa.Date(), nullable=True),
    sa.Column('last_diet_plan', sa.Text(), nullable=True),
    sa.Column('last_weekly_analysis', sa.Text(), nullable=True),
    sa.Column('last_analysis_generated_at', sa.DateTime(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('subscription_status', sa.Enum('FREE', 'PREMIUM', name='subscriptionstatus'), nullable=True),
    sa.Column('subscription_expires_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_password_reset_token'), ['password_reset_token'], unique=False)

    op.create_table('conversations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_pinned', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dish_ingredients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dish_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('weight_g', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['dish_id'], ['dishes.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friendships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'DECLINED', 'BLOCKED', name='friendshipstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('friendships', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_friendships_id'), ['id'], unique=False)

    op.create_table('meals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=True),
    sa.Column('category', sa.Enum('SNIADANIE', 'DRUGIE_SNIADANIE', 'OBIAD', 'KOLACJA', 'PRZEKASKA', name='mealcategory'), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('meals', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_meals_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_meals_name'), ['name'], unique=False)

    op.create_table('user_challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('challenge_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'FAILED', name='challengestatus'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user_challenges', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_challenges_id'), ['id'], unique=False)

    op.create_table('water_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('time', sa.Time(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('water_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_water_entries_id'), ['id'], unique=False)

    op.create_table('weight_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('weight_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_weight_entries_id'), ['id'], unique=False)

    op.create_table('workouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('calories_burned', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_workouts_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_workouts_name'), ['name'], unique=False)

    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('conversation_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_name', sa.String(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('original_amount', sa.Float(), nullable=False),
    sa.Column('original_unit', sa.String(), nullable=False),
    sa.Column('display_quantity_text', sa.String(), nullable=True),
    sa.Column('standardized_grams', sa.Float(), nullable=False),
    sa.Column('deconstruction_details', sa.JSON(), nullable=True),
    sa.Column('is_default_quantity', sa.Boolean(), nullable=False),
    sa.Column('meal_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['meal_id'], ['meals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('meal_entries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_meal_entries_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('meal_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_meal_entries_id'))

    op.drop_table('meal_entries')
    op.drop_table('chat_messages')
    with op.batch_alter_table('workouts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_workouts_name'))
        batch_op.drop_index(batch_op.f('ix_workouts_id'))

    op.drop_table('workouts')
    with op.batch_alter_table('weight_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_weight_entries_id'))

    op.drop_table('weight_entries')
    with op.batch_alter_table('water_entries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_water_entries_id'))

    op.drop_table('water_entries')
    with op.batch_alter_table('user_challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_challenges_id'))

    op.drop_table('user_challenges')
    with op.batch_alter_table('meals', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_meals_name'))
        batch_op.drop_index(batch_op.f('ix_meals_id'))

    op.drop_table('meals')
    with op.batch_alter_table('friendships', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_friendships_id'))

    op.drop_table('friendships')
    op.drop_table('dish_ingredients')
    op.drop_table('conversations')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_password_reset_token'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_name'))

    op.drop_table('products')
    with op.batch_alter_table('dishes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dishes_name'))

    op.drop_table('dishes')
    with op.batch_alter_table('challenges', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_challenges_id'))

    op.drop_table('challenges')
    with op.batch_alter_table('cached_products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cached_products_name'))

    op.drop_table('cached_products')
    with op.batch_alter_table('cached_dishes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cached_dishes_query'))

    op.drop_table('cached_dishes')
    # ### end Alembic commands ###
